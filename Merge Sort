#include<stdio.h>
 
void mergesort(int a[],int lb,int ub);
void merge(int a[],int lb,int mid ,int ub);
 
int main()
{
	int a[30],n,i;
	printf("Enter no of elements:");
	scanf("%d",&n);
	printf("Enter array elements:");
	for(i=0;i<n;i++)
	{
		scanf("%d",&a[i]);	
	}
	
	mergesort(a,0,n-1);
	
	printf("\nSorted array is :");
	for(i=0;i<n;i++)
		printf("%d ",a[i]);
		
	return 0;
}
 
void mergesort(int a[],int lb ,int ub) //i=lb, j=ub
{
	int mid;
		
	if(lb<ub)
	{
		mid=(lb+ub)/2;
		mergesort(a,lb,mid);		//left recursion
		mergesort(a,mid+1,ub);	//right recursion
		merge(a,lb,mid,ub);	//merging of two sorted sub-arrays
	}
}
 
void merge(int a[],int lb, int mid, int ub) //i1=lb, j1=mid, i2=mid+1, j2=ub
{
	int temp[50];	//array used for merging
	int i,j,k;
	i=lb;	//beginning of the first list
	j=mid+1;	//beginning of the second list
	k=0;	//index for new array temp
	
	while(i<=mid && j<=ub)	//while elements in both lists
	{
		if(a[i]<a[j])
		{
			temp[k]=a[i];		//pehle array ka first element is smaller than other array ka first element hence it'll be placed first in temp
			i++;	
		}
		else
		{
			temp[k]=a[j];
			j++;
		}
		k++;
	}
	if(i>mid) // for remaining elements of j list elements
	{
		while(j<=ub)
		{
			temp[k]=a[j];
			j++;
			k++;
		}
	}
	else	// for remaining elements of i list elements
	{
		while(i<=mid)
		{
			temp[k]=a[i];
			i++;
			k++;
		}	
	}
	
		

		
	//Transfer elements from temp[] back to a[]
	for(i=lb,j=0;i<=ub;i++,j++)
		a[i]=temp[j];
}
